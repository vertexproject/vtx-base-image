version: 2.1

executors:
  amd64:
    machine:
      image: ubuntu-2204:current

commands:
  docker_build:
    parameters:
      DIRNAME:
        type: string
      IMAGE_ARCH:
        type: string
        default: amd64
    steps:
      # Note: no restore_cache, so the image is always rebuilt
      - checkout
      - run:
          name: build base image
          command: |
            set -ex
            export DOCKER_BUILDKIT=1
            export BUILDKIT_PROGRESS=plain
            docker context create "<< parameters.IMAGE_ARCH >>-build"
            docker buildx create "<< parameters.IMAGE_ARCH >>-build" "--platform=linux/<< parameters.IMAGE_ARCH >>" --use
            docker buildx inspect --bootstrap
  
            # produce single-arch image for future publishing
            docker buildx build \
                --platform "linux/<< parameters.IMAGE_ARCH >>" \
                --tag "syntestimage:<< parameters.DIRNAME >>-regular" \
                --output "type=docker,dest=syntestimage.<< parameters.IMAGE_ARCH >>.tar" \
                --file "./<< parameters.DIRNAME >>/Dockerfile" \
                .

      - save_cache:
          key: syntestimage-<< parameters.DIRNAME >><< pipeline.git.revision >>-regular
          paths:
            - syntestimage.<< parameters.IMAGE_ARCH >>.tar

  docker_test:
    parameters:
      DIRNAME:
        type: string
      IMAGE_ARCH:
        type: string
        default: amd64
      SYN_MASTER_REF:
        type: string
        default: master
    steps:
      - checkout
      # note, cache in restore_cache comes from the latest build step only
      - restore_cache:
          key: syntestimage-<< parameters.DIRNAME >><< pipeline.git.revision >>-regular
      - run:
          name: set up test images and run tests
          command: |
            set -ex
            export DOCKER_BUILDKIT=1
            export BUILDKIT_PROGRESS=plain

            docker image load -i "syntestimage.<< parameters.IMAGE_ARCH >>.tar"

            docker container run --rm "syntestimage:<< parameters.DIRNAME >>-regular" \
                python -m pip freeze

            printf "FROM syntestimage:<< parameters.DIRNAME >>-regular\n\n" > "test/Dockerfile_<< parameters.DIRNAME >>"
            cat test/Dockerfile >> "test/Dockerfile_<< parameters.DIRNAME >>"
            docker buildx build \
                --platform << parameters.IMAGE_ARCH >> \
                --tag "syntestimage:<< parameters.DIRNAME >>-test" \
                --file "test/Dockerfile_<< parameters.DIRNAME >>" \
                ./test

            docker container run --rm --network host \
                --env 'SYN_LOG_LEVEL=DEBUG' \
                --env 'SYN_MASTER_REF=<< parameters.SYN_MASTER_REF >>' \
                "syntestimage:<< parameters.DIRNAME >>-test" 2>&1

jobs:
  build_311:
    executor: amd64
    steps:
      - docker_build:
          DIRNAME: python311

  test_311:
    executor: amd64
    steps:
      - docker_test:
          DIRNAME: python311

  build_313:
    executor: amd64
    steps:
      - docker_build:
          DIRNAME: python313

  test_313:
    executor: amd64
    steps:
      - docker_test:
          DIRNAME: python313
          SYN_MASTER_REF: bender/syn3xx/py313-updates

workflows:
  build-and-test:
    jobs:
      - build_311
      - test_311:
          requires:
            - build_311
      - build_313
      - test_313:
          requires:
            - build_313